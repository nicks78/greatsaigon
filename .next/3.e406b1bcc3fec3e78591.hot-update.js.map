{"version":3,"sources":["webpack:///./containers/category.js?978a"],"names":["Category","props","handleButton1","setState","isToggle1","prevState","handleButton2","isToggle2","handleButton3","isToggle3","state","StaticData","Beauty","headings","cardItems","slice","map","item","index","title","slug","img","Restaurants","GoingOut","React","Component"],"mappings":"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","file":"3.e406b1bcc3fec3e78591.hot-update.js","sourcesContent":["import React from \"react\";\nimport StaticData from \"../static-data/static-data\";\nimport CardCategory from \"../components/cards/card-category\";\n\nclass Category extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggle1: false,\n      isToggle2: false,\n      isToggle3: false\n    };\n  }\n  handleButton1 = () => {\n    this.setState(prevState => ({\n      isToggle1: !prevState.isToggle1\n    }));\n  };\n\n  handleButton2 = () => {\n    this.setState(prevState => ({\n      isToggle2: !prevState.isToggle2\n    }));\n  };\n\n  handleButton3 = () => {\n    this.setState(prevState => ({\n      isToggle3: !prevState.isToggle3\n    }));\n  };\n\n  // You should use state to show more category with slice()\n  render() {\n    return (\n      <div className=\"gridCategory\">\n        <br />\n\n        <h1>{StaticData.Beauty.headings}</h1>\n        <hr />\n        <div className=\"uk-column-1-1 uk-column-1-3@l\">\n          {// Here you can map your different card and use slice to\n          this.state.isToggle3 === false\n            ? StaticData.Beauty.cardItems.slice(0, 3).map((item, index) => {\n                return (\n                  <CardCategory\n                    key={index}\n                    cateTitle=\"beauty\"\n                    title={item.title}\n                    slug={item.slug}\n                    image={item.img}\n                  />\n                );\n              })\n            : StaticData.Beauty.cardItems.slice(0, 6).map((item, index) => {\n                return (\n                  <CardCategory\n                    key={index}\n                    cateTitle=\"beauty\"\n                    title={item.title}\n                    slug={item.slug}\n                    image={item.img}\n                  />\n                );\n              })}\n        </div>\n        <button onClick={this.handleButton3} className=\"moreButton\">\n          {this.state.isToggle3 === false ? \"+more\" : \"-less\"}\n        </button>\n\n        <h1>{StaticData.Restaurants.headings}</h1>\n        <hr />\n        <div className=\"uk-column-1-1 uk-column-1-3@l\">\n          {// Use card a component for styling\n          // Use slice() to show more category\n          this.state.isToggle1 === false\n            ? StaticData.Restaurants.cardItems\n                .slice(0, 3)\n                .map((item, index) => {\n                  return (\n                    <CardCategory\n                      key={index}\n                      cateTitle=\"food-and-drink\"\n                      title={item.title}\n                      slug={item.slug}\n                      image={item.img}\n                    />\n                  );\n                })\n            : StaticData.Restaurants.cardItems\n                .slice(0, 6)\n                .map((item, index) => {\n                  return (\n                    <CardCategory\n                      key={index}\n                      cateTitle=\"food-and-drink\"\n                      title={item.title}\n                      slug={item.slug}\n                      image={item.img}\n                    />\n                  );\n                })}\n        </div>\n\n        <button onClick={this.handleButton1} className=\"moreButton\">\n          {this.state.isToggle1 === false ? \"+more\" : \"-less\"}\n        </button>\n\n        <h1>{StaticData.GoingOut.headings}</h1>\n        <hr />\n        <div className=\"uk-column-1-1 uk-column-1-3@l\">\n          {// Here you can map your different card and use slice to\n          this.state.isToggle2 === false\n            ? StaticData.GoingOut.cardItems.slice(0, 3).map((item, index) => {\n                return (\n                  <CardCategory\n                    key={index}\n                    cateTitle=\"nightlife\"\n                    title={item.title}\n                    slug={item.slug}\n                    image={item.img}\n                  />\n                );\n              })\n            : StaticData.GoingOut.cardItems.slice(0, 6).map((item, index) => {\n                return (\n                  <CardCategory\n                    key={index}\n                    cateTitle=\"nightlife\"\n                    title={item.title}\n                    slug={item.slug}\n                    image={item.img}\n                  />\n                );\n              })}\n        </div>\n\n        <button onClick={this.handleButton2} className=\"moreButton\">\n          {this.state.isToggle2 === false ? \"+more\" : \"-less\"}\n        </button>\n        <style jsx global>\n          {`\n            hr {\n              border: 1px solid red;\n            }\n\n            .moreButton {\n              background-color: red;\n              color: #fff;\n              border: none;\n              border-radius: 8px;\n              margin-top: 10px;\n              width: 100%;\n              height: 40px;\n              font-size: 18px;\n            }\n            .moreButton:hover {\n              background-color: #fff;\n              border: 1px solid red;\n              color: red;\n            }\n            .moreButton:focus {\n              outline: 0;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n\nexport default Category;\n\n\n\n// WEBPACK FOOTER //\n// ./containers/category.js"],"sourceRoot":""}